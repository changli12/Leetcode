class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int total1=nums1.length;
        int total2=nums2.length;
        if(total1>total2)
            return findMedianSortedArrays(nums2,nums1);
        int L1=0,L2=0,R1=0,R2=0,C1=0,C2=0;
        int low=0,high=2*total1;
        while(low<=high)
        {
            C1=(low+high)/2;
            C2=total1+total2-C1;
            L1=(C1==0)?Integer.MIN_VALUE:nums1[(C1-1)/2];
            R1=(C1==2*total1)?Integer.MAX_VALUE:nums1[C1/2];
            L2=(C2==0)?Integer.MIN_VALUE:nums2[(C2-1)/2];
            R2=(C2==2*total2)?Integer.MAX_VALUE:nums2[C2/2];
            if(L1>R2)
                high=C1-1;
            else if(L2>R1)
                low=C1+1;
            else break;
        }
        return (Math.max(L1,L2)+Math.min(R1,R2))/2.0;
    }
}