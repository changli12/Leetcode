/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
    TreeNode current;  
    Stack<TreeNode> stack;  
    public BSTIterator(TreeNode root) {  
        current=root;  
        stack=new Stack<TreeNode>();  
        while(current!=null)  
        {  
            stack.push(current);  
            current=current.left;  
        }  
    }  
    /** @return whether we have a next smallest number */  
    public boolean hasNext() {  
     return !stack.isEmpty();  
    }  
    /** @return the next smallest number */  
    public int next() {  
      current=stack.pop();  
      int res=current.val;  
      current=current.right;
      while(current!=null)  
       {  
         stack.push(current);  
         current=current.left;  
       }  
       return res; 
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */